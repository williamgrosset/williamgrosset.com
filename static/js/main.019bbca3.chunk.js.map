{"version":3,"sources":["components/Projects/styles.module.css","containers/App/styles.module.css","analytics.ts","components/About/index.tsx","components/Writings/index.tsx","components/Projects/index.tsx","components/Social/index.tsx","containers/App/index.tsx","serviceWorker.js","index.tsx","components/Social/styles.module.css"],"names":["module","exports","linkClicked","link","window","analytics","track","socialClicked","social","About","className","href","target","onClick","Writings","role","aria-label","projects","value","label","description","language","languageColor","url","Projects","useState","project","setProject","items","onChange","projectSelected","width","map","item","index","key","projectViewed","styles","Circle","style","backgroundColor","socials","name","icon","faGithub","faLinkedin","faTwitter","faInstagram","Socials","isConfettiVisible","setConfettiVisibility","Button","SocialButtonsWrapper","SocialButton","ConfettiWrapper","active","tabs","App","tab","setTab","theme","themes","default","Window","tabClicked","Tab","isBrowser","Social","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.019bbca3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Circle\":\"styles_Circle__3et_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__2lMmi\",\"Window\":\"styles_Window__yNJ1l\",\"Tab\":\"styles_Tab__32Ncx\"};","declare global {\n  interface Window {\n    analytics: any\n  }\n}\n\nexport function tabClicked(tab: string): void {\n  window.analytics.track('Tab Clicked', {\n    tab\n  })\n}\n\nexport function linkClicked(link: string): void {\n  window.analytics.track('Link Clicked', {\n    link\n  })\n}\n\nexport function socialClicked(social: string): void {\n  window.analytics.track('Social Clicked', {\n    social\n  })\n}\n\nexport function projectSelected(project: string): void {\n  window.analytics.track('Project Selected', {\n    project\n  })\n}\n\nexport function projectViewed(project: string): void {\n  window.analytics.track('Project Viewed', {\n    project\n  })\n}\n","import React from 'react'\nimport { Anchor } from 'react95'\nimport { linkClicked } from '../../analytics'\n\nconst About: React.FC = () => (\n  <>\n    <p>\n      William Grosset ‚Äî 22 years old, dual citizen of the United Kingdom and\n      Canada, residing in Vancouver, and a Software Engineer working with the\n      Growth team at{' '}\n      <Anchor\n        className=\"link\"\n        href=\"https://segment.com/\"\n        target=\"_blank\"\n        onClick={() => linkClicked('Segment')}\n      >\n        Segment\n      </Anchor>\n      . At 20, I worked with the Revenue team at{' '}\n      <Anchor\n        className=\"link\"\n        href=\"https://www.change.org/\"\n        target=\"_blank\"\n        onClick={() => linkClicked('Change.org')}\n      >\n        Change.org\n      </Anchor>\n      . At 19, I worked with the LEAD Lab research group on an open source\n      health care product at the University of Victoria where I study Computer\n      Science.\n    </p>\n  </>\n)\n\nexport default About\n","import React from 'react'\n\nconst Writings: React.FC = () => (\n  <>\n    <p>Coming soon.</p>\n    <p>\n      Email me if you are interested in hearing my thoughts regarding a specific\n      topic.{' '}\n      <span role=\"img\" aria-label=\"smiley\">\n        üòä\n      </span>\n    </p>\n  </>\n)\n\nexport default Writings\n","import React, { useState } from 'react'\nimport { Anchor, Select, Button } from 'react95'\nimport { projectSelected, projectViewed } from '../../analytics'\nimport styles from './styles.module.css'\n\nconst projects = [\n  {\n    value: 0,\n    label: 'üìñ Chapter',\n    description:\n      'Conventions and rules for Git commit messages to ensure that commented changes are descriptive, informative, and standardized.',\n    language: 'C++',\n    languageColor: '#F34B7D',\n    url: 'https://github.com/williamgrosset/chapter'\n  },\n  {\n    value: 1,\n    label: 'üê¢ Turtle',\n    description:\n      'A 200-line Unix shell that supports basic command execution, changing directories, and running background processes.',\n    language: 'C',\n    languageColor: '#555555',\n    url: 'https://github.com/williamgrosset/turtle'\n  },\n  {\n    value: 2,\n    label: 'üì° Trace',\n    description:\n      'Analyze IP datagrams in a capture file and echo information such as the source and destination, intermediate routers, protocol types, round-trip times, and fragmentation.',\n    language: 'Python',\n    languageColor: '#3572A5',\n    url: 'https://github.com/williamgrosset/trace'\n  },\n  {\n    value: 3,\n    label: 'üê¶ Tweety',\n    description:\n      'Basic HTTP CLI that echos a web server‚Äôs support for HTTPs, highest HTTP version, and available cookies. Built to spec defined in RFC 1945, 2616 and 7450.',\n    language: 'Python',\n    languageColor: '#3572A5',\n    url: 'https://github.com/williamgrosset/tweety'\n  },\n  {\n    value: 4,\n    label: 'üìß Mail',\n    description: 'Simple, animated, and customizable React mail icon.',\n    language: 'TypeScript',\n    languageColor: '#2B7489',\n    url: 'https://github.com/williamgrosset/react-mail-icon'\n  },\n  {\n    value: 5,\n    label: '‚úä Fokus',\n    description:\n      'Chrome extension for blocking distracting sites and practicing meditation after subconcious navigation.',\n    language: 'JavaScript',\n    languageColor: '#F1E05A',\n    url: 'https://github.com/williamgrosset/fokus'\n  },\n  {\n    value: 6,\n    label: 'üè• ConCert',\n    description:\n      'Public API, Bash scripts, and a UI to support auditing of the open source OSCAR EMR system. Project supervised by Dr. Jens Weber and Dr. Raymond Rusk at the UVic LEAD Lab.',\n    language: 'Java',\n    languageColor: '#B07219',\n    url: 'https://github.com/williamgrosset/OSCAR-ConCert/tree/master/ConCert'\n  },\n  {\n    value: 7,\n    label: 'üçç Ripe',\n    description:\n      'Product Manager for building a iOS, point-of-sale application with photo recognition for grocers. Built within a 24 hour hackathon and achieved 2nd place at MLH2017.',\n    language: 'Swift',\n    languageColor: '#FFAC45',\n    url: 'https://github.com/williamgrosset/ripe'\n  }\n]\n\nconst Projects: React.FC = () => {\n  const [project, setProject] = useState<number>(0)\n\n  const handleChange = value => {\n    setProject(value)\n    projectSelected(projects[value].label)\n  }\n\n  return (\n    <>\n      <Select items={projects} onChange={handleChange} width={150} />\n      {projects.map(\n        (item, index) =>\n          index === project && (\n            <div key={index}>\n              <p>{item.description}</p>\n              <Button>\n                <Anchor\n                  href={item.url}\n                  target=\"_blank\"\n                  onClick={() => projectViewed(item.label)}\n                >\n                  View project\n                </Anchor>\n              </Button>\n              <span\n                className={styles.Circle}\n                style={{ backgroundColor: item.languageColor }}\n              />\n              <span>{item.language}</span>\n            </div>\n          )\n      )}\n    </>\n  )\n}\n\nexport default Projects\n","import React, { useState } from 'react'\nimport { Anchor, Button } from 'react95'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport {\n  faGithub,\n  faLinkedin,\n  faTwitter,\n  faInstagram\n} from '@fortawesome/free-brands-svg-icons'\nimport Confetti from 'react-dom-confetti'\nimport { socialClicked } from '../../analytics'\nimport styles from './styles.module.css'\n\nconst socials = [\n  {\n    name: 'GitHub',\n    url: 'https://github.com/williamgrosset',\n    icon: faGithub\n  },\n  {\n    name: 'LinkedIn',\n    url: 'https://www.linkedin.com/in/williamgrosset',\n    icon: faLinkedin\n  },\n  {\n    name: 'Twitter',\n    url: 'https://twitter.com/williamhgrosset',\n    icon: faTwitter\n  },\n  {\n    name: 'Instagram',\n    url: 'https://instagram.com/williamgrosset',\n    icon: faInstagram\n  }\n]\n\nconst Socials: React.FC = () => {\n  const [isConfettiVisible, setConfettiVisibility] = useState<boolean>(false)\n\n  const throwConfetti = () => {\n    setConfettiVisibility(true)\n  }\n\n  return (\n    <>\n      <p>\n        You can reach me by\n        <Button className={styles.Button} onClick={throwConfetti}>\n          <Anchor\n            href=\"mailto:williamhgrosset@gmail.com\"\n            onClick={() => socialClicked('Email')}\n          >\n            Email\n          </Anchor>\n        </Button>\n      </p>\n      <div className={styles.SocialButtonsWrapper}>\n        {socials.map((item, index) => (\n          <Button className={styles.SocialButton} key={index}>\n            <Anchor\n              href={item.url}\n              target=\"_blank\"\n              onClick={() => socialClicked(item.name)}\n            >\n              <Icon icon={item.icon} /> <span>{item.name}</span>\n            </Anchor>\n          </Button>\n        ))}\n      </div>\n      <div className={styles.ConfettiWrapper}>\n        <Confetti active={isConfettiVisible} />\n      </div>\n    </>\n  )\n}\n\nexport default Socials\n","import React, { useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport {\n  Window,\n  WindowHeader,\n  WindowContent,\n  Tabs,\n  Tab,\n  TabBody,\n  themes\n} from 'react95'\nimport { isBrowser } from 'react-device-detect'\nimport { tabClicked } from '../../analytics'\nimport About from '../../components/About'\nimport Writings from '../../components/Writings'\nimport Projects from '../../components/Projects'\nimport Social from '../../components/Social'\nimport styles from './styles.module.css'\n\nconst tabs = ['About', 'Writings', 'Projects', 'Social']\n\nconst App: React.FC = () => {\n  const [tab, setTab] = useState<number>(0)\n\n  const handleChange = value => {\n    setTab(value)\n    tabClicked(tabs[value])\n  }\n\n  return (\n    <div className={styles.App}>\n      <ThemeProvider theme={themes.default}>\n        <Window className={styles.Window}>\n          <WindowHeader>\n            <span role=\"img\" aria-label=\"man\">\n              üôã‚Äç‚ôÇÔ∏è{' '}\n            </span>{' '}\n            me.exe\n          </WindowHeader>\n          <WindowContent>\n            <Tabs value={tab} onChange={handleChange}>\n              <Tab className={styles.Tab} value={0}>\n                {isBrowser && (\n                  <>\n                    <span role=\"img\" aria-label=\"rose\">\n                      üåπ\n                    </span>{' '}\n                  </>\n                )}\n                About\n              </Tab>\n              <Tab className={styles.Tab} value={1}>\n                {isBrowser && (\n                  <>\n                    <span role=\"img\" aria-label=\"rose\">\n                      üìù\n                    </span>{' '}\n                  </>\n                )}\n                Writings\n              </Tab>\n              <Tab className={styles.Tab} value={2}>\n                {isBrowser && (\n                  <>\n                    <span role=\"img\" aria-label=\"rose\">\n                      üíª\n                    </span>{' '}\n                  </>\n                )}\n                Projects\n              </Tab>\n              <Tab className={styles.Tab} value={3}>\n                {isBrowser && (\n                  <>\n                    <span role=\"img\" aria-label=\"rose\">\n                      üë™\n                    </span>{' '}\n                  </>\n                )}\n                Social\n              </Tab>\n            </Tabs>\n            <TabBody>\n              {tab === 0 && <About />}\n              {tab === 1 && <Writings />}\n              {tab === 2 && <Projects />}\n              {tab === 3 && <Social />}\n            </TabBody>\n          </WindowContent>\n        </Window>\n      </ThemeProvider>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"styles_Button__3F7Q2\",\"SocialButton\":\"styles_SocialButton__1C0c-\",\"SocialButtonsWrapper\":\"styles_SocialButtonsWrapper__kf9T4\",\"ConfettiWrapper\":\"styles_ConfettiWrapper__2Hl2U\"};"],"sourceRoot":""}